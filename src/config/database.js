import mongoose from "mongoose";
import dotenv from "dotenv";

// Carrega vari√°veis do .env
dotenv.config();

// Pega a URI do MongoDB Atlas
const uri = process.env.MONGO_URI;

// Fun√ß√£o para validar a URI
const validateUri = () => {
  if (!uri) {
    console.error(
      "‚ùå Erro: A vari√°vel de ambiente MONGO_URI n√£o est√° definida!\n" +
      "‚Üí Crie um arquivo .env na raiz do projeto com a linha:\n" +
      "   MONGO_URI='sua_uri_do_mongodb_atlas'"
    );
    process.exit(1); // encerra o processo com erro
  }
};

// Fun√ß√£o de conex√£o com reconex√£o autom√°tica
const connect = async () => {
  try {
    validateUri();

    await mongoose.connect(uri, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });

    console.log("‚úÖ Conectado ao MongoDB Atlas com sucesso!");

    mongoose.connection.on("error", (err) => {
      console.error("‚ùå Erro na conex√£o com o MongoDB:", err);
    });

    mongoose.connection.on("disconnected", () => {
      console.warn("‚ö†Ô∏è Conex√£o com MongoDB perdida. Tentando reconectar em 5s...");
      setTimeout(connect, 5000);
    });

  } catch (err) {
    console.error("‚ùå Falha ao conectar ao MongoDB:", err);
    console.log("üîÅ Tentando reconectar em 5 segundos...");
    setTimeout(connect, 5000);
  }
};

// Exporta a fun√ß√£o de conex√£o
export default { connect };
